<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Utility</name>
    </assembly>
    <members>
        <member name="T:KeyLocker.Utility.Console.ConsoleHelper">
            <summary>
            Eine Hilfsklasse für Ein- und Ausgabe auf der Konsole.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.Console.ConsoleHelper.WriteSeperator(System.Char)">
            <summary>
            Füllt eine Zeile des Terminals mit <paramref name="seperator"/>.
            </summary>
            <param name="seperator">Das auszugebende Zeichen.</param>
        </member>
        <member name="M:KeyLocker.Utility.Console.ConsoleHelper.Write(System.String,KeyLocker.Utility.Console.ConsoleWriteOptions)">
            <summary>
            Gibt <paramref name="text"/> aus und wendet die Optionen <paramref name="options"/> an.
            </summary>
            <param name="text">Der auszugebende Text.</param>
            <param name="options">Die anzuwendenden Optionen</param>
        </member>
        <member name="M:KeyLocker.Utility.Console.ConsoleHelper.Prompt(System.String,KeyLocker.Utility.Console.ConsolePromptOptions)">
            <summary>
            Schreibt <paramref name="question"/> (Standardwert ist "> "), liest eine Zeile der Nutzereingabe und gibt diese zurück.
            </summary>
            <param name="question">Der Text, der vor der Eingabe angezeigt werden soll.</param>
            <param name="options">Die anzuwendenden Optionen.</param>
            <returns>Die Nutzereingabe.</returns>
        </member>
        <member name="M:KeyLocker.Utility.Console.ConsoleHelper.PromptBool(System.String,KeyLocker.Utility.Console.ConsolePromptOptions)">
            <summary>
            Schreibt <paramref name="question"/> (Standardwert ist "> ") und liest eine Zeile der Nutzereingabe, 
            die als boolescher Wert interpretiert wird.
            </summary>
            <param name="question">Der Text, der vor der Eingabe angezeigt werden soll.</param>
            <param name="options">Die anzuwendenden Optionen.</param>
            <returns>True, wenn die Eingabe y oder Y war, false wenn die Eingabe n oder N war.</returns>
        </member>
        <member name="M:KeyLocker.Utility.Console.ConsoleHelper.WriteAll``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Schreibt eine Auflistung von Elementen in die Konsole.
            </summary>
            <typeparam name="T">Der Typ der auszugebenden Items.</typeparam>
            <param name="items">Die auszugebenden Items.</param>
            <param name="seperator">Der string, der nach jedem Element, außer dem letzten, aus <paramref name="items"/> ausgegeben wird.</param>
        </member>
        <member name="M:KeyLocker.Utility.Console.ConsoleHelper.ReadLine(System.String,KeyLocker.Utility.Console.ConsolePromptOptions)">
            <summary>
            Liest eine Zeile der Nutzereingabe ein und behandelt Sonderzeichen, etc.
            Es werden folgende Eingaben ignoriert:
            </summary>
            <returns>Die Nutzereingabe.</returns>
        </member>
        <member name="T:KeyLocker.Utility.Console.ConsolePromptOptions">
            <summary>
            Optionen für eine Konsolenausgabe.
            </summary>
        </member>
        <member name="P:KeyLocker.Utility.Console.ConsolePromptOptions.Hidden">
            <summary>
            Holt einen Wert, der angibt, ob die Eingabe versteckt werden soll oder nicht.
            </summary>
        </member>
        <member name="P:KeyLocker.Utility.Console.ConsolePromptOptions.Validator">
            <summary>
            Holt den <see cref="T:KeyLocker.Utility.Console.IInputValidator"/> der die Eingabe validieren soll.
            </summary>
        </member>
        <member name="P:KeyLocker.Utility.Console.ConsolePromptOptions.AllowSkip">
            <summary>
            Holt einen Wert, der angibt, ob eine leere Eingabe unabhängig von <see cref="P:KeyLocker.Utility.Console.ConsolePromptOptions.Validator"/>
            akzeptiert werden soll und dann <code>default(string)</code> zurückgibt.
            </summary>
        </member>
        <member name="T:KeyLocker.Utility.Console.ConsoleWriteOptions">
            <summary>
            Optionen für eine Konsolenausgabe.
            </summary>
        </member>
        <member name="P:KeyLocker.Utility.Console.ConsoleWriteOptions.TextColor">
            <summary>
            Holt die Textfarbe.
            </summary>
        </member>
        <member name="P:KeyLocker.Utility.Console.ConsoleWriteOptions.BackgroundColor">
            <summary>
            Holt die Hintergrundfarbe.
            </summary>
        </member>
        <member name="T:KeyLocker.Utility.Console.IInputValidator">
            <summary>
            Implementierende Klassen stellen Methoden bereit, um eine Nutzereingabe zu validieren.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.Console.IInputValidator.IsValid(System.String)">
            <summary>
            Validiert eine Nutzereingabe.
            </summary>
            <param name="userInput">Die zu validierende Eingabe.</param>
            <returns>True, wenn die Eingabe gültig ist, sonst false.</returns>
        </member>
        <member name="T:KeyLocker.Utility.Console.Validation.CustomTimeSpanValidator">
            <summary>
            Implementierung von <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>, die prüft, ob die Eingabe eine Zeitspanne darstellt.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.CustomTimeSpanValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Utility.Console.Validation.EnumValidator`1">
            <summary>
            Implementierung von <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>, die prüft, ob die Eingabe einem Wert einer Enum entspricht.
            </summary>
        </member>
        <member name="F:KeyLocker.Utility.Console.Validation.EnumValidator`1.names">
            <summary>
            Die Namen der Enum-Werte.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.EnumValidator`1.#ctor">
            <summary>
            Inituialisiert eine neue Instanz.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.EnumValidator`1.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Utility.Console.Validation.IntValidator">
            <summary>
            Implementierung von <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>, die prüft, ob die Eingabe eine Zahl ist.
            </summary>
        </member>
        <member name="F:KeyLocker.Utility.Console.Validation.IntValidator.min">
            <summary>
            Das erlaubte inklusive Minimum.
            </summary>
        </member>
        <member name="F:KeyLocker.Utility.Console.Validation.IntValidator.max">
            <summary>
            Das erlaubte inklusive Maximum.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.IntValidator.#ctor">
            <summary>
            Initialisiert eine neue Instanz, die sämtliche Eingaben erlaubt, die einen Integer darstellen.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.IntValidator.#ctor(System.Int32)">
            <summary>
            Initialisiert eine neue Instanz, die sämtliche Eingaben erlaubt, die einen 
            Integer zwischen 0 und <paramref name="max"/> (inklusive) darstellen.
            </summary>
            <param name="max">Das inklusive Maximum.</param>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.IntValidator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initialisiert eine neue Instanz, die sämtliche Eingaben erlaubt, die einen 
            Integer zwischen <paramref name="min"/> und <paramref name="max"/> (beide inklusive) darstellen.
            </summary>
            <param name="min">Das inklusive Minimum</param>
            <param name="max">Das inklusive Maximum.</param>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.IntValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Utility.Console.Validation.IsOnlyOfValidator">
            <summary>
            Implementierung von <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>, die prüft, ob die Eingabe nur aus einer Liste von erlaubten Zeichen besteht.
            </summary>
        </member>
        <member name="F:KeyLocker.Utility.Console.Validation.IsOnlyOfValidator.allowedCharacters">
            <summary>
            Die erlaubten Zeichen. 
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.IsOnlyOfValidator.#ctor(System.String)">
            <summary>
            Initialisiert eine neue Instanz der Klasse.
            </summary>
            <param name="allowedCharacters">Die erlaubten Zeichen.</param>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.IsOnlyOfValidator.#ctor(System.Char[])">
            <summary>
            Initialisiert eine neue Instanz der Klasse.
            </summary>
            <param name="allowedCharacters">Die erlaubten Zeichen.</param>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.IsOnlyOfValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Utility.Console.Validation.IsYesNoValidator">
            <summary>
            Implementierung von <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>, die prüft, ob die Eingabe y, Y, n oder N ist. (Ja/Nein)
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.IsYesNoValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Utility.Console.Validation.LogicalAndValidator">
            <summary>
            Eine Implementierung von <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>, die mehrere andere <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>
            durch logisches UND verknüpft.
            </summary>
        </member>
        <member name="F:KeyLocker.Utility.Console.Validation.LogicalAndValidator.validators">
            <summary>
            Die zu prüfenden <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>-Instanzen.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.LogicalAndValidator.#ctor(System.Collections.Generic.IEnumerable{KeyLocker.Utility.Console.IInputValidator})">
            <summary>
            Initialisiert eine neue Instanz der Klasse.
            </summary>
            <param name="validators">Die zu prüfenden <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>-Instanzen.</param>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.LogicalAndValidator.#ctor(KeyLocker.Utility.Console.IInputValidator[])">
            <summary>
            Initialisiert eine neue Instanz der Klasse.
            </summary>
            <param name="validators">Die zu prüfenden <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>-Instanzen.</param>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.LogicalAndValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Utility.Console.Validation.LogicalOrValidator">
            <summary>
            Eine Implementierung von <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>, die mehrere andere <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>
            durch logisches ODER verknüpft.
            </summary>
        </member>
        <member name="F:KeyLocker.Utility.Console.Validation.LogicalOrValidator.validators">
            <summary>
            Die zu prüfenden <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>-Instanzen.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.LogicalOrValidator.#ctor(System.Collections.Generic.IEnumerable{KeyLocker.Utility.Console.IInputValidator})">
            <summary>
            Initialisiert eine neue Instanz der Klasse.
            </summary>
            <param name="validators">Die zu prüfenden <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>-Instanzen.</param>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.LogicalOrValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Utility.Console.Validation.NotEmptyValidator">
            <summary>
            Implementierung von <see cref="T:KeyLocker.Utility.Console.IInputValidator"/>, die prüft, ob die Eingabe nicht leer ist.
            </summary>
        </member>
        <member name="F:KeyLocker.Utility.Console.Validation.NotEmptyValidator.target">
            <summary>
            Das zu validierende Ziel. 
            Wird am Anfangg einer potentiellen Fehlermeldung ausgegeben.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.NotEmptyValidator.#ctor(System.String)">
            <summary>
            Initialisiert eine neue Instanz.
            </summary>
            <param name="target">Das zu validierende Ziel. Wird am Anfangg einer potentiellen Fehlermeldung ausgegeben.</param>
        </member>
        <member name="M:KeyLocker.Utility.Console.Validation.NotEmptyValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Utility.CryptoRandomGenerator">
            <summary>
            Enthält einige statische Methoden für die Erzeugung von Kryptografischen Zufallswerten.
            </summary>
        </member>
        <member name="F:KeyLocker.Utility.CryptoRandomGenerator.cryptoServiceProvider">
            <summary>
            Der Provider für Crypto-Services.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.CryptoRandomGenerator.#ctor">
            <summary>
            Initialisiert eine neue Instanz der Klasse.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.CryptoRandomGenerator.RandomCharFrom(System.Char[])">
            <summary>
            Gibt ein zufälliges Zeichen aus <paramref name="src"/> zurück.
            </summary>
            <param name="src">Das Array, aus dem ein zufälliges Element entnommen wird.</param>
            <returns>Ein zufälliges Zeichen aus <paramref name="src"/>.</returns>
        </member>
        <member name="M:KeyLocker.Utility.CryptoRandomGenerator.GenerateRandomUint(System.UInt32,System.UInt32)">
            <summary>
            Erzeugt einen zufälligen <see cref="T:System.UInt32"/> im Bereich [min, max).
            </summary>
            <param name="min">Das Minimum (inklusiv).</param>
            <param name="max">Das Maximum (exklusiv).</param>
            <returns>Einen zufälligen <see cref="T:System.UInt32"/> im Bereich [min, max).</returns>
        </member>
        <member name="M:KeyLocker.Utility.CryptoRandomGenerator.GenerateRandomUint(System.UInt32)">
            <summary>
            Erzeugt einen zufälligen <see cref="T:System.UInt32"/> im Bereich [0, max).
            </summary>
            <param name="max">Das Maximum (exklusiv).</param>
            <returns>Einen zufälligen <see cref="T:System.UInt32"/> im Bereich [0, max).</returns>
        </member>
        <member name="M:KeyLocker.Utility.CryptoRandomGenerator.GenerateRandomUint">
            <summary>
            Erzeugt einen zufälligen <see cref="T:System.UInt32"/> aus einer cryptografiesicheren Quelle.
            </summary>
            <returns>Ein zufälliger <see cref="T:System.UInt32"/>.</returns>
        </member>
        <member name="T:KeyLocker.Utility.CustomTimeSpan">
            <summary>
            Stellt eine einfache Zeitspanne dar.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.CustomTimeSpan.#ctor(System.Int32,KeyLocker.Utility.CustomTimeSpanKind)">
            <summary>
            Initialisiert eine neue Instanz der Klasse.
            </summary>
            <param name="amount">Die Länge der Spanne.</param>
            <param name="kind">Die Art der Spanne.</param>
        </member>
        <member name="P:KeyLocker.Utility.CustomTimeSpan.Amount">
            <summary>
            Holt die Länge der Spanne.
            </summary>
        </member>
        <member name="P:KeyLocker.Utility.CustomTimeSpan.Kind">
            <summary>
            Holt die Art der Spanne.
            </summary>
        </member>
        <member name="P:KeyLocker.Utility.CustomTimeSpan.Zero">
            <summary>
            Gibt eine Zeitspann zurück, die eine Zeit von 0 beschreibt.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.CustomTimeSpan.TryParse(System.String,KeyLocker.Utility.CustomTimeSpan@)">
            <summary>
            Versucht den String <paramref name="s"/> als einfache Zeitspanne im Format [Zahl][s|m|h|d|W|M|Y] zu lesen.
            </summary>
            <param name="s">Der zu parsende String.</param>
            <param name="result">Das Ergebnis des Parsings oder <see cref="P:KeyLocker.Utility.CustomTimeSpan.Zero"/> bei Fehlschlag.</param>
            <returns>True, wenn das Parsing erfolgreich war, sonst false.</returns>
        </member>
        <member name="M:KeyLocker.Utility.CustomTimeSpan.Parse(System.String)">
            <summary>
            Liest den String <paramref name="s"/> als einfache Zeitspanne im Format [Zahl][s|m|h|d|W|M|Y].
            </summary>
            <param name="s">Der zu parsende String.</param>
            <returns>Eine neue Instanz von <see cref="T:KeyLocker.Utility.CustomTimeSpan"/>.</returns>
        </member>
        <member name="M:KeyLocker.Utility.CustomTimeSpan.CompareToDifference(System.DateTime,System.DateTime)">
            <summary>
            Prüft, ob die die aktuelle Instanz eine Zeitspanne darstellt, die kürzer, gleich oder länger ist als 
            die Zeit zwischen <paramref name="a"/> und <paramref name="b"/>.
            </summary>
            <param name="a">Der erste Zeitpunkt.</param>
            <param name="b">Der zweite Zeitpunkt.</param>
            <returns>-1 wenn die dargestllte Zeit kleiner als die Zeit zwischen <paramref name="a"/> und <paramref name="b"/> ist.
                      0 wenn die Zeiten gleich sind.
                      1 wenn die dargestellte Zeit länger ist, als die Zeit zwischen <paramref name="a"/> und <paramref name="b"/>.</returns>
        </member>
        <member name="M:KeyLocker.Utility.CustomTimeSpan.AddTo(System.DateTime)">
            <summary>
            Gibt eine <see cref="T:System.DateTime"/>-Instanz zurück, die um die dargestellte Zeitspanne versetzt wurde.
            </summary>
            <param name="a">Der Ausgangszeitpunkt.</param>
            <returns><paramref name="a"/> + die dargestellte Zeitspanne.</returns>
        </member>
        <member name="T:KeyLocker.Utility.CustomTimeSpanKind">
            <summary>
            Beschreibt die Art einer Zeitspanne.
            </summary>
        </member>
        <member name="F:KeyLocker.Utility.CustomTimeSpanKind.Seconds">
            <summary>
            Die Zeitspanne beschreibt Sekunden.
            </summary>
        </member>
        <member name="F:KeyLocker.Utility.CustomTimeSpanKind.Minutes">
            <summary>
            Die Zeitspanne beschreibt Minuten.
            </summary>
        </member>
        <member name="F:KeyLocker.Utility.CustomTimeSpanKind.Hours">
            <summary>
            Die Zeitspanne beschreibt Stunden.
            </summary>
        </member>
        <member name="F:KeyLocker.Utility.CustomTimeSpanKind.Days">
            <summary>
            Die Zeitspanne beschreibt Tage.
            </summary>
        </member>
        <member name="F:KeyLocker.Utility.CustomTimeSpanKind.Months">
            <summary>
            Die Zeitspanne beschreibt Sekunden.
            </summary>
        </member>
        <member name="F:KeyLocker.Utility.CustomTimeSpanKind.Years">
            <summary>
            Die Zeitspanne beschreibt Jahre.
            </summary>
        </member>
        <member name="T:KeyLocker.Utility.LevenshteinDistance">
            <summary>
            Eine Klasse zur Berechnung der Levenshtein-Distanz.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.LevenshteinDistance.Compute(System.String,System.String)">
            <summary>
            Berechnet die Levenshtein-Distanz zwischn <paramref name="s"/> und <paramref name="t"/>.
            </summary>
            <param name="s">Der erste zu vergleichende String.</param>
            <param name="t">Der zweite zu vergleichende String.</param>
            <returns>Die Levenshtein-Distanz.</returns>
        </member>
        <member name="T:KeyLocker.Utility.NotifyPropertyChangedBase">
            <summary>
            Basisklasse für Objekte, die eine Änderung einer Eigenschaft publizieren wollen.
            </summary>
        </member>
        <member name="E:KeyLocker.Utility.NotifyPropertyChangedBase.PropertyChanged">
            <summary>
            Wird ausgelöst, wenn 
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.NotifyPropertyChangedBase.OnPropertyChanged(System.String)">
            <summary>
            Löst <see cref="E:KeyLocker.Utility.NotifyPropertyChangedBase.PropertyChanged"/> aus.
            </summary>
            <param name="propertyName">Der Name der geänderten Eigenschaft.</param>
        </member>
        <member name="T:KeyLocker.Utility.PropertyChangedEventArgs">
            <summary>
            Argumente für ein Event, dass die Änderung einer Eigenschaft beschreibt.
            </summary>
        </member>
        <member name="M:KeyLocker.Utility.PropertyChangedEventArgs.#ctor(System.String)">
            <summary>
            Initialisiert eine neue Instanz der Klasse.
            </summary>
            <param name="propertyName">Der Name der geänderten Eigenschaft.</param>
        </member>
        <member name="P:KeyLocker.Utility.PropertyChangedEventArgs.PropertyName">
            <summary>
            Der Name der geänderten Eigenschaft.
            </summary>
        </member>
        <member name="T:Utility.FileUtil">
            <summary>
            Stellt Methoden zum Erstellen von Dateien bereit.
            </summary>
        </member>
        <member name="M:Utility.FileUtil.CreateFile(System.String)">
            <summary>
            Erzeugt eine neue Datei mit dem Pfad <paramref name="path"/>. 
            Erstellt auch alle übergeordneten Verzeichnisse.
            </summary>
            <param name="path">Der Pfad zur Datei.</param>
        </member>
        <member name="M:Utility.FileUtil.CreateSubDirs(System.String)">
            <summary>
            Erstellt rekursiv alle Verzeichnisse bis alle Verzeichnisse im Pfad <paramref name="path"/> existieren.
            </summary>
            <param name="path">Der zu erstellende Pfad.</param>
        </member>
    </members>
</doc>
