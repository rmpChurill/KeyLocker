<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Console</name>
    </assembly>
    <members>
        <member name="T:KeyLocker.Console.Commands.HelpCommand">
            <summary>
            Stellt den Hilfebefehl dar.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Commands.HelpCommand.#ctor">
            <summary>
            Initialisiert eine neue Instanz der Klasse.
            </summary>
        </member>
        <member name="P:KeyLocker.Console.Commands.HelpCommand.HelpDescritpion">
            <inheritdoc/>
        </member>
        <member name="P:KeyLocker.Console.Commands.HelpCommand.IsCaseSensitive">
            <inheritdoc/>
        </member>
        <member name="P:KeyLocker.Console.Commands.HelpCommand.Command">
            <inheritdoc/>
        </member>
        <member name="P:KeyLocker.Console.Commands.HelpCommand.Alias">
            <inheritdoc/>
        </member>
        <member name="M:KeyLocker.Console.Commands.HelpCommand.Execute(KeyLocker.Console.ConsoleCore,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Console.Commands.ICommand">
            <summary>
            Stellt eine ausführbare Aktion dar. 
            Ableitende Klassen stellen Methoden und Eigenschaften zur Identifikation der Aktion bereit.
            </summary>
        </member>
        <member name="P:KeyLocker.Console.Commands.ICommand.HelpDescritpion">
            <summary>
            Holt einen Text, der in der Hilfe als Beschreibung angezeigt werden soll.
            </summary>
        </member>
        <member name="P:KeyLocker.Console.Commands.ICommand.IsCaseSensitive">
            <summary>
            Holt einen Wert, der angibt, ob bei dem Vergleich einer Nutzereingabe mit <see cref="P:KeyLocker.Console.Commands.ICommand.Command"/> oder 
            <see cref="P:KeyLocker.Console.Commands.ICommand.Alias"/> die Groß-/Kleinschreibung beachtet werden soll oder nicht.
            </summary>
        </member>
        <member name="P:KeyLocker.Console.Commands.ICommand.Command">
            <summary>
            Holt den Befehl, der mit dieser Aktion verknüpft werden soll.
            </summary>
        </member>
        <member name="P:KeyLocker.Console.Commands.ICommand.Alias">
            <summary>
            Holt eine Auflistung von alternativen Befehlen für diese Aktion.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Commands.ICommand.Execute(KeyLocker.Console.ConsoleCore,System.String)">
            <summary>
            Führt die Aktion aus.
            </summary>
            <param name="core">Die ausführende <see cref="T:KeyLocker.Console.ConsoleCore"/>-Instanz.</param>
            <param name="arg">Der Teil der Nutzereingabe, der dem Namen des Befehls (oder einem Alias) folgte.</param>
        </member>
        <member name="T:KeyLocker.Console.Commands.KnownCommands">
            <summary>
            Stellt eine Sammlung aller bekannten Zustände bereit.
            </summary>
        </member>
        <member name="F:KeyLocker.Console.Commands.KnownCommands.HelpCommand">
            <summary>
            Die Instanz des Hilfsbefehls.
            </summary>
        </member>
        <member name="F:KeyLocker.Console.Commands.KnownCommands.NewEntryCommand">
            <summary>
            Die Instanz des Befehls zur Erzeugung eines neuen Eintrags.
            </summary>
        </member>
        <member name="P:KeyLocker.Console.Commands.KnownCommands.All">
            <summary>
            Holt eine Auflistung aller bekannten Befehle.
            </summary>
        </member>
        <member name="T:KeyLocker.Console.Commands.NewEntryCommand">
            <summary>
            Stellt den Befehl zur Erzeugung eines neuen Eintrags dar.
            </summary>
        </member>
        <member name="P:KeyLocker.Console.Commands.NewEntryCommand.HelpDescritpion">
            <inheritdoc/>
        </member>
        <member name="P:KeyLocker.Console.Commands.NewEntryCommand.IsCaseSensitive">
            <inheritdoc/>
        </member>
        <member name="P:KeyLocker.Console.Commands.NewEntryCommand.Command">
            <inheritdoc/>
        </member>
        <member name="P:KeyLocker.Console.Commands.NewEntryCommand.Alias">
            <inheritdoc/>
        </member>
        <member name="M:KeyLocker.Console.Commands.NewEntryCommand.Execute(KeyLocker.Console.ConsoleCore,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Console.ConsoleCore">
            <summary>
            Stellt den Kern der Anwendung dar.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.ConsoleCore.#ctor">
            <summary>
            Initialisiert eine neue Instanz der Klasse.
            </summary>
        </member>
        <member name="P:KeyLocker.Console.ConsoleCore.StateStack">
            <summary>
            Holt einen Stack, der eine Reihe von Zuständen speichert.
            Der oberste Eintrag ist der aktuelle Zustand.
            </summary>
        </member>
        <member name="P:KeyLocker.Console.ConsoleCore.KeyLockerCore">
            <summary>
            Holt den Kern der Bibliothek, über den die Transaktionen ausgeführt werden.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.ConsoleCore.PushState(KeyLocker.Console.States.State)">
            <summary>
            Betritt einen neuen Zustand.
            </summary>
            <param name="state">Der neue Zustand.</param>
        </member>
        <member name="M:KeyLocker.Console.ConsoleCore.PopState">
            <summary>
            Beendet den letzten Zustand.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.ConsoleCore.Run">
            <summary>
            Startet die Ausführung des Konsolenprogramms in einer Endlosschleife.
            </summary>
        </member>
        <member name="T:KeyLocker.Console.ConsoleHelper">
            <summary>
            Eine Hilfsklasse für Ein- und Ausgabe auf der Konsole.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.ConsoleHelper.PrintColor(System.String,System.ConsoleColor,System.Nullable{System.ConsoleColor})">
            <summary>
            Gibt <paramref name="text"/> aus und ändert dazu die Textfarbe zu <paramref name="foreground"/> und
            die Hintergrundfarbe zu <paramref name="background"/>. Nach der Ausgabe werden die Farben zurückgesetzt.
            </summary>
            <param name="text">Der auszugebende Text.</param>
            <param name="foreground">Die zu nutzende Textfarbe.</param>
            <param name="background">Die zu nutzende Hintergrundfarbe. Ist der Parameter null wird die Hintegrundfarbe nicht geändert.</param>
        </member>
        <member name="M:KeyLocker.Console.ConsoleHelper.Prompt(System.String)">
            <summary>
            Schreibt <paramref name="question"/> (Standardwert ist "> "), liest eine Zeile der Nutzereingabe und gibt diese zurück.
            </summary>
            <param name="question">Der Text, der vor der Eingabe angezeigt werden soll.</param>
            <returns>Die Nutzereingabe.</returns>
        </member>
        <member name="M:KeyLocker.Console.ConsoleHelper.ValidatedPrompt(KeyLocker.Console.Validation.IInputValidator,System.String)">
            <summary>
            Schreibt <paramref name="question"/> (Standardwert ist "> "), liest eine Zeile der Nutzereingabe.
            Diese Eingabe wird durch <paramref name="validator"/> validiert und die Eingabe wird solange wiederholt, bis
            die Validierung erfolgreich ist.
            </summary>
            <param name="validator">Der zu nutzende <see cref="T:KeyLocker.Console.Validation.IInputValidator"/></param>
            <param name="question">Der Text, der vor der Eingabe angezeigt werden soll.</param>
            <returns>Die Nutzereingabe.</returns>
        </member>
        <member name="M:KeyLocker.Console.ConsoleHelper.ValidatedPromptOrEmpty(KeyLocker.Console.Validation.IInputValidator,System.String)">
            <summary>
            Schreibt <paramref name="question"/> (Standardwert ist "> "), liest eine Zeile der Nutzereingabe.
            Diese Eingabe wird durch <paramref name="validator"/> validiert und die Eingabe wird solange wiederholt, bis
            die Validierung erfolgreich ist.
            Außerdem sind leere Eingaben erlaubt. Diese werden nicht validiert sondern führen direkt zu einer Rückgabe von null.
            </summary>
            <param name="validator">Der zu nutzende <see cref="T:KeyLocker.Console.Validation.IInputValidator"/></param>
            <param name="question">Der Text, der vor der Eingabe angezeigt werden soll.</param>
            <returns>Die Nutzereingabe oder null bei einer leeren Eingabe.</returns>
        </member>
        <member name="M:KeyLocker.Console.ConsoleHelper.PromptBool(System.String)">
            <summary>
            Schreibt <paramref name="question"/> (Standardwert ist "> ") und liest eine Zeile der Nutzereingabe, 
            die als boolescher Wert interpretiert wird.
            </summary>
            <param name="question">Der Text, der vor der Eingabe angezeigt werden soll.</param>
            <returns></returns>
        </member>
        <member name="M:KeyLocker.Console.ConsoleHelper.HiddenPrompt(System.String)">
            <summary>
            Schreibt <paramref name="question"/> (Standardwert ist "> "), liest eine Zeile der Nutzereingabe, wobei 
            die Eingabe abgefangen wird, sodass die Eingabe nicht angezeigt wird und gibt diese zurück.
            </summary>
            <param name="question">Der Text, der vor der Eingabe angezeigt werden soll.</param>
            <returns>Die Nutzereingabe.</returns>
        </member>
        <member name="M:KeyLocker.Console.ConsoleHelper.WriteAll``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Schreibt eine Auflistung von Elementen in die Konsole.
            </summary>
            <typeparam name="T">Der Typ der auszugebenden Items.</typeparam>
            <param name="items">Die auszugebenden Items.</param>
            <param name="seperator">Der string, der nach jedem Element, außer dem letzten, aus <paramref name="items"/> ausgegeben wird.</param>
        </member>
        <member name="M:KeyLocker.Console.ConsoleHelper.HiddenReadLine">
            <summary>
            Liest eine Zeile der Nutzereingabe ein, ohne die Zeichen im Terminal anzuzeigen.
            </summary>
            <returns>Die Nutzereingabe.</returns>
        </member>
        <member name="T:KeyLocker.Console.Program">
            <summary>
            Hauptklasse des Konsolenprogramms.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Program.Main(System.String[])">
            <summary>
            Haupteinsprungspunkt des Konsolenprogramms.
            </summary>
            <param name="args">Die Aufrufparameter.</param>
        </member>
        <member name="T:KeyLocker.Console.States.BasicState">
            <summary>
            Der Grundzustand des Programms.
            </summary>
        </member>
        <member name="P:KeyLocker.Console.States.BasicState.AllowedCommands">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Console.States.KnownStates">
            <summary>
            Eine Sammlung aller bekannten Zustände.
            </summary>
        </member>
        <member name="F:KeyLocker.Console.States.KnownStates.BasicState">
            <summary>
            Der Grundzustand der Anwendung.
            </summary>
            <returns></returns>
        </member>
        <member name="P:KeyLocker.Console.States.KnownStates.All">
            <summary>
            Holt alle bekannnte Zustände.
            </summary>
        </member>
        <member name="T:KeyLocker.Console.States.State">
            <summary>
            Stellt einen Zustand des Programms dar.
            Implementierende Klassen stellen Methoden und Eigenschaften zur Identifikation der Zustände und 
            der Behandlung von Übergängen dar.
            </summary>
        </member>
        <member name="P:KeyLocker.Console.States.State.AllowedCommands">
            <summary>
            Holt eine Auflistung von Befehlen, die in diesem Zustand ausgeführt werden können.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.States.State.HandleUserInput(KeyLocker.Console.ConsoleCore,System.String)">
            <summary>
            Behandelt die Eingabe eines Nutzers.
            </summary>
            <param name="core">Die ausführende <see cref="T:KeyLocker.Console.ConsoleCore"/>-Instanz.</param>
            <param name="input">Die Nutzereingabe.</param>
        </member>
        <member name="M:KeyLocker.Console.States.State.OnActionNotFound(KeyLocker.Console.ConsoleCore,System.String)">
            <summary>
            Wird aufgerufen wenn für eine Eingabe keine Aktion gefunden wurden.
            </summary>
            <param name="core">Die ausführende <see cref="T:KeyLocker.Console.ConsoleCore"/>-Instanz.</param>
            <param name="input">Die Nutzereingabe.</param>
        </member>
        <member name="M:KeyLocker.Console.States.State.OnActionRun(KeyLocker.Console.ConsoleCore,KeyLocker.Console.Commands.ICommand,System.String)">
            <summary>
            Wird aufgerufen wenn eine Aktion begonnen wird.
            </summary>
            <param name="core">Die ausführende <see cref="T:KeyLocker.Console.ConsoleCore"/>-Instanz.</param>
            <param name="action">Die Aktion, die als nächstes ausgeführt wird.</param>
            <param name="argument">Die Eingabe für diese Aktion.</param>
            <returns>True, wenn die Aktion ausgeführt soll, sonst false.</returns>
        </member>
        <member name="M:KeyLocker.Console.States.State.OnBegin(KeyLocker.Console.ConsoleCore)">
            <summary>
            Wird aufgerufen wenn der Zustand begonnen wird, also wenn die Instanz zu <see cref="P:KeyLocker.Console.ConsoleCore.StateStack"/> hinzugefügt wird.
            </summary>
            <param name="core">Die ausführende <see cref="T:KeyLocker.Console.ConsoleCore"/>-Instanz.</param>
        </member>
        <member name="M:KeyLocker.Console.States.State.OnTick(KeyLocker.Console.ConsoleCore)">
            <summary>
            Behandelt einen Ausführungsschritt.
            </summary>
            <param name="core">Die ausführende <see cref="T:KeyLocker.Console.ConsoleCore"/>-Instanz.</param>
        </member>
        <member name="M:KeyLocker.Console.States.State.OnEnd(KeyLocker.Console.ConsoleCore)">
            <summary>
            Wird aufgerufen wenn der Zustand beendet wird, also wenn die Instanz von <see cref="P:KeyLocker.Console.ConsoleCore.StateStack"/> entfernt wird.
            </summary>
            <param name="core">Die ausführende <see cref="T:KeyLocker.Console.ConsoleCore"/>-Instanz.</param>
        </member>
        <member name="T:KeyLocker.Console.Validation.CustomTimeSpanValidator">
            <summary>
            Implementierung von <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>, die prüft, ob die Eingabe eine Zeitspanne darstellt.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Validation.CustomTimeSpanValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Console.Validation.EnumValidator`1">
            <summary>
            Implementierung von <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>, die prüft, ob die Eingabe einem Wert einer Enum entspricht.
            </summary>
        </member>
        <member name="F:KeyLocker.Console.Validation.EnumValidator`1.names">
            <summary>
            Die Namen der Enum-Werte.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Validation.EnumValidator`1.#ctor">
            <summary>
            Inituialisiert eine neue Instanz.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Validation.EnumValidator`1.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Console.Validation.IInputValidator">
            <summary>
            Implementierende Klassen stellen Methoden bereit, um eine Nutzereingabe zu validieren.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Validation.IInputValidator.IsValid(System.String)">
            <summary>
            Validiert eine Nutzereingabe.
            </summary>
            <param name="userInput">Die zu validierende Eingabe.</param>
            <returns>True, wenn die Eingabe gültig ist, sonst false.</returns>
        </member>
        <member name="T:KeyLocker.Console.Validation.IntValidator">
            <summary>
            Implementierung von <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>, die prüft, ob die Eingabe eine Zahl ist.
            </summary>
        </member>
        <member name="F:KeyLocker.Console.Validation.IntValidator.min">
            <summary>
            Das erlaubte inklusive Minimum.
            </summary>
        </member>
        <member name="F:KeyLocker.Console.Validation.IntValidator.max">
            <summary>
            Das erlaubte inklusive Maximum.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Validation.IntValidator.#ctor">
            <summary>
            Initialisiert eine neue Instanz, die sämtliche Eingaben erlaubt, die einen Integer darstellen.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Validation.IntValidator.#ctor(System.Int32)">
            <summary>
            Initialisiert eine neue Instanz, die sämtliche Eingaben erlaubt, die einen 
            Integer zwischen 0 und <paramref name="max"/> (inklusive) darstellen.
            </summary>
            <param name="max">Das inklusive Maximum.</param>
        </member>
        <member name="M:KeyLocker.Console.Validation.IntValidator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initialisiert eine neue Instanz, die sämtliche Eingaben erlaubt, die einen 
            Integer zwischen <paramref name="min"/> und <paramref name="max"/> (beide inklusive) darstellen.
            </summary>
            <param name="min">Das inklusive Minimum</param>
            <param name="max">Das inklusive Maximum.</param>
        </member>
        <member name="M:KeyLocker.Console.Validation.IntValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Console.Validation.IsOnlySpecialCharactersValidator">
            <summary>
            Implementierung von <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>, die prüft, ob die Eingabe nur aus Sonderzeichen besteht.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Validation.IsOnlySpecialCharactersValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Console.Validation.IsYesNoValidator">
            <summary>
            Implementierung von <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>, die prüft, ob die Eingabe y, Y, n oder N ist. (Ja/Nein)
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Validation.IsYesNoValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Console.Validation.LogicalAndValidator">
            <summary>
            Eine Implementierung von <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>, die mehrere andere <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>
            durch logisches UND verknüpft.
            </summary>
        </member>
        <member name="F:KeyLocker.Console.Validation.LogicalAndValidator.validators">
            <summary>
            Die zu prüfenden <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>-Instanzen.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Validation.LogicalAndValidator.#ctor(System.Collections.Generic.IEnumerable{KeyLocker.Console.Validation.IInputValidator})">
            <summary>
            Initialisiert eine neue Instanz der Klasse.
            </summary>
            <param name="validators">Die zu prüfenden <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>-Instanzen.</param>
        </member>
        <member name="M:KeyLocker.Console.Validation.LogicalAndValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Console.Validation.LogicalOrValidator">
            <summary>
            Eine Implementierung von <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>, die mehrere andere <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>
            durch logisches ODER verknüpft.
            </summary>
        </member>
        <member name="F:KeyLocker.Console.Validation.LogicalOrValidator.validators">
            <summary>
            Die zu prüfenden <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>-Instanzen.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Validation.LogicalOrValidator.#ctor(System.Collections.Generic.IEnumerable{KeyLocker.Console.Validation.IInputValidator})">
            <summary>
            Initialisiert eine neue Instanz der Klasse.
            </summary>
            <param name="validators">Die zu prüfenden <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>-Instanzen.</param>
        </member>
        <member name="M:KeyLocker.Console.Validation.LogicalOrValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Console.Validation.NotEmptyValidator">
            <summary>
            Implementierung von <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>, die prüft, ob die Eingabe nicht leer ist.
            </summary>
        </member>
        <member name="F:KeyLocker.Console.Validation.NotEmptyValidator.target">
            <summary>
            Das zu validierende Ziel. 
            Wird am Anfangg einer potentiellen Fehlermeldung ausgegeben.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Validation.NotEmptyValidator.#ctor(System.String)">
            <summary>
            Initialisiert eine neue Instanz.
            </summary>
            <param name="target">Das zu validierende Ziel. Wird am Anfangg einer potentiellen Fehlermeldung ausgegeben.</param>
        </member>
        <member name="M:KeyLocker.Console.Validation.NotEmptyValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:KeyLocker.Console.Validation.UniqueNameValidator">
            <summary>
            Implementierung von <see cref="T:KeyLocker.Console.Validation.IInputValidator"/>, die prüft, ob keine andere Instanz 
            von <see cref="T:KeyLocker.Entry"/> denselben Namen nutzt.
            </summary>
        </member>
        <member name="F:KeyLocker.Console.Validation.UniqueNameValidator.core">
            <summary>
            Die ausführende <see cref="T:KeyLocker.CoreLib.KeyLockerCore"/>-Instanz.
            </summary>
        </member>
        <member name="M:KeyLocker.Console.Validation.UniqueNameValidator.#ctor(KeyLocker.CoreLib.KeyLockerCore)">
            <summary>
            Initialisiert eine neue Instanz.
            </summary>
            <param name="core">Die ausführende <see cref="T:KeyLocker.CoreLib.KeyLockerCore"/>-Instanz.</param>
        </member>
        <member name="M:KeyLocker.Console.Validation.UniqueNameValidator.IsValid(System.String)">
            <inheritdoc/>
        </member>
    </members>
</doc>
